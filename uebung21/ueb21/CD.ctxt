#BlueJ class context
comment0.target=CD
comment0.text=\r\n\ \ \ \ Die\ Klasse\:\ \ CD.java\r\n\ \ \ \ Realisiert\ eine\ CD-Klasse\r\n\r\n\ @version\t2.0\ Beta\ 04.01.2019\r\n\ @author\tWolfgang\ Pauly\r\n\r\n
comment1.params=artikelNr\ bestand\ preis\ interpret\ titel\ anzahlMusiktitel
comment1.target=CD(int,\ int,\ double,\ java.lang.String,\ java.lang.String,\ int)
comment1.text=\r\n\ \ \ \ Der\ Konstruktor\ zur\ Voll-Initialisierung\r\n\r\n\ \ \ \ @param\ artikelNr\ initial\ CD-Artikelnummer\r\n\ \ \ \ @param\ bezeichnung\ initial\ CD-Bezeichnung\r\n\ \ \ \ @param\ bestand\ initial\ CD-Bestandd\r\n\ \ \ \ @param\ preis\ initial\ CD-Preis\r\n\ \ \ \ @param\ interpret\ initial\ CD-Interpret\r\n\ \ \ \ @param\ titel\ initial\ CD-Titel\r\n\ \ \ \ @param\ anzahlMusiktitel\ initial\ CD-Musiktitel-Anzahl\r\n
comment10.params=
comment10.target=java.lang.String\ toString()
comment10.text=\r\n\ \ \ \ erzeugt\ einen\ String,\ der\ alle,\ fuer\ den\ Klassenbenutzer\r\n\ \ \ \ wichtigen,\ CD-Merkmale\ enthaelt\r\n\ \ \ \ \r\n\ \ \ \ @return\ die\ String-Repraesentation\ der\ CD\r\n
comment11.params=vergleichsArtikel
comment11.target=boolean\ equals(java.lang.Object)
comment11.text=\r\n\ Die\ equals-Methode\r\n\ \r\n\ Compares\ this\ object\ to\ the\ specified\ object.\ \r\n\ The\ result\ is\ true\ if\ and\ only\ if\ the\ argument\ is\ not\ null\ and\ is\ an\ Person-object\ \r\n\ that\ contains\ the\ same\ values\ for\ vorname,\ nachname\ as\ this\ object\r\n
comment2.params=interpret\ titel\ anzahlMusiktitel
comment2.target=void\ setCDAttributes(java.lang.String,\ java.lang.String,\ int)
comment2.text=\r\n\ \ \ \ die\ Hilfs-Methode\ zu\ Konstruktion\ von\ CD-Objekten\r\n\r\n\ \ \ \ @param\ interpret\ initial\ CD-Interpret\r\n\ \ \ \ @param\ titel\ initial\ CD-Titel\r\n\ \ \ \ @param\ anzahlMusiktitel\ initial\ CD-Musiktitel-Anzahl\r\n
comment3.params=
comment3.target=java.lang.String\ getInterpret()
comment3.text=\r\n\ \ \ \ gibt\ CD-Attribut\ \:\ interpret\ zurueck\r\n\ \ \ \ \r\n\ \ \ \ @return\ \ \ \ CD-Interpret\r\n
comment4.params=interpret
comment4.target=void\ setInterpret(java.lang.String)
comment4.text=\r\n\ \ \ \ setzt\ CD-Attribut\ \:\ \ interpret\r\n\ \ \ \ \r\n\ \ \ \ @param\ interpret\ \ \ \ \ neuer\ Interpret\r\n
comment5.params=
comment5.target=java.lang.String\ getTitel()
comment5.text=\r\n\ \ \ \ gibt\ CD-Attribut\ \:\ titel\ zurueck\r\n\ \ \ \ \r\n\ \ \ \ @return\ \ \ \ CD-Titel\r\n
comment6.params=titel
comment6.target=void\ setTitel(java.lang.String)
comment6.text=\r\n\ \ \ \ setzt\ CD-Attribut\ \:\ \ titel\r\n\ \ \ \ \r\n\ \ \ \ @param\ titel\ \ \ \ \ neuer\ Titel\r\n
comment7.params=
comment7.target=int\ getAnzahlMusikTitel()
comment7.text=\r\n\ \ \ \ gibt\ CD-Attribut\ \:\ anzahlMusikTitel\ zurueck\r\n\ \ \ \ \r\n\ \ \ \ @return\ \ \ \ Anzahl\ der\ Musiktitel\ auf\ der\ CD\r\n
comment8.params=anzahlMusikTitel
comment8.target=void\ setAnzahlMusikTitel(int)
comment8.text=\r\n\ \ \ \ setzt\ CD-Attribut\ \:\ \ anzahlMusikTitel\r\n\ \ \ \ \r\n\ \ \ \ @param\ anzahlMusikTitel\ \ \ \ \ die\ neue\ Anzahl\ der\ Musiktitel\r\n
comment9.params=
comment9.target=java.lang.String\ getBeschreibung()
comment9.text=\r\n\ \ \ \ erzeugt\ einen\ Beschreibungs-String,\ der\ eine\ Kurzbeschreibung\r\n\ \ \ \ der\ CD\ zurueckliefert\r\n\ \ \ \ \r\n\ \ \ \ @return\ eine\ Kurzbeschreibung\ der\ CD\r\n
numComments=12
